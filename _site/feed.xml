<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.3">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2023-07-30T20:03:17+05:30</updated><id>http://localhost:4000/feed.xml</id><title type="html">Sharc</title><subtitle>Insights into the world of web3 and Decentralization of different platforms.</subtitle><entry><title type="html">First move with Move!</title><link href="http://localhost:4000/2023/01/28/hello-move.html" rel="alternate" type="text/html" title="First move with Move!" /><published>2023-01-28T00:00:00+05:30</published><updated>2023-01-28T00:00:00+05:30</updated><id>http://localhost:4000/2023/01/28/hello-move</id><content type="html" xml:base="http://localhost:4000/2023/01/28/hello-move.html">&lt;p&gt;In this article, we are going to take our first step with the Move Programming Language. Learn about some intricate details of how it works. Learn a bit about how to write Move and &lt;strong&gt;understand its syntax and publish our first Move Module&lt;/strong&gt; on the Aptos Chain. We will setup our local CLI to achieve all this.&lt;/p&gt;

&lt;p&gt;Move is a programming language for Web3 that emphasizes on &lt;strong&gt;Scarcity and Access control&lt;/strong&gt;. &lt;strong&gt;Structs cannot be accidentally duplicated or dropped&lt;/strong&gt; unless explicitly defined, this by default enforces scarcity. Access Control comes from the notion of accounts as well as access privileges that have been enforced on the modules. A module &lt;strong&gt;unless it has a public constructor or public setters and getters, it cant be accessed from elsewhere&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Here we will write a Move program that will &lt;strong&gt;set a message on the Aptos Chain&lt;/strong&gt;, thus altering the state of the chain and then &lt;strong&gt;read it back&lt;/strong&gt;. Alright, lets jump in now!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In this article, we will see:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#setting-up-the-env&quot;&gt;Setting up the env&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-a-module&quot;&gt;What is a Module?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#use-statements&quot;&gt;Use Statements&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#resources-and-events&quot;&gt;Resources and Events&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#drop-and-store&quot;&gt;Drop and Store&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#constants&quot;&gt;Constants&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#functions&quot;&gt;Functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#mutable-functions&quot;&gt;Mutable Functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#test-functions&quot;&gt;Test Functions&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#unit-tests&quot;&gt;Unit Tests&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#compile-test-and-publish&quot;&gt;Compile, Test and Publish&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#interact-with-the-module&quot;&gt;Interact with the Module&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#references&quot;&gt;References&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;setting-up-the-env&quot;&gt;Setting up the env&lt;/h2&gt;
&lt;p&gt;Let’s start by cloning the codebase that we are going to work with first.
Please note that this repository was created for the purpose of this tutorial with some modifications from [1].&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;git clone https://github.com/iArunava/hellomove.git&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Now, your directory structure should look something like this.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── Move.toml
└── sources
    ├── hello_blockchain.move
    └── hello_blockchain_test.move
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You would notice an extra directory called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;framework&lt;/code&gt;. That directory just contains all the dependencies that are required for the project.&lt;/p&gt;

&lt;p&gt;Before moving forward we need aptos cli installed on our system. You can head over to the installation site for all the different ways to install it, which can be found &lt;a href=&quot;https://aptos.dev/tools/aptos-cli/install-cli/&quot;&gt;here&lt;/a&gt;. If you are on linux/WSL the following should work fine. Only prerequisite is that you should have python3 installed in your system. Which comes by default in most OS.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl -fsSL &quot;https://aptos.dev/scripts/install_cli.py&quot; | python3

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;That should be it. After that you should be able to do this.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ aptos -V
aptos 2.0.2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;My version is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2.0.2&lt;/code&gt;. Earlier versions upto 1.4 or above should work fine for this tutorial.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-module&quot;&gt;What is a Module?&lt;/h2&gt;
&lt;p&gt;Now, we will understand what each file here is doing. Let’s start with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_move.move&lt;/code&gt; file. This is the source file which contains the logic that how this program will behave once it has been published on the chain. Lets take a look into this file.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module hello_move::message {
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The first line of the file looks somewhat like this. Here we are defining a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module&lt;/code&gt; in Move. Lets start with what is a module in Move.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Modules are libraries that define struct types along with functions that operate on these types. Struct types define the schema of Move’s global storage, and module functions define the rules for updating storage. Modules themselves are also stored in global storage.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;A &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;module&lt;/code&gt; in Move has the following syntax.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module &amp;lt;address&amp;gt;::&amp;lt;identifier&amp;gt; {
    (&amp;lt;use&amp;gt; | &amp;lt;friend&amp;gt; | &amp;lt;type&amp;gt; | &amp;lt;function&amp;gt; | &amp;lt;constant&amp;gt;)*
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;address&lt;/code&gt; here can be both named or literal address. Here comparing the syntax and code we find that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_move&lt;/code&gt; in the code is a named address. And &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; is an identifier.&lt;/p&gt;

&lt;p&gt;This named address, is defined in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Move.toml&lt;/code&gt; file, which we will explore later. Alright, so this module &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; will be published under the named address &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_move&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;use-statements&quot;&gt;Use Statements&lt;/h2&gt;
&lt;p&gt;Next we see some &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;use&lt;/code&gt; statements.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use std::error;
use std::signer;
use std::string;
use aptos_framework::account;
use aptos_framework::event;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;use&lt;/code&gt; has the following syntax&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use &amp;lt;address&amp;gt;::&amp;lt;module name&amp;gt;;
use &amp;lt;address&amp;gt;::&amp;lt;module name&amp;gt; as &amp;lt;module alias name&amp;gt;;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;These are declaring some public modules that one plans to use through out that can help us get things done faster. Looking closer, we are importing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signer&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; libraries from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;std&lt;/code&gt; account and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;account&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event&lt;/code&gt; from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aptos_framework&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;use std::error&lt;/code&gt; would introduce an alias &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error&lt;/code&gt;, and that would mean anywhere we could use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error&lt;/code&gt; instead of using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;std::error&lt;/code&gt;. Similarly, to importing libraries in other languages, we can use an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;as E&lt;/code&gt; statement to change the alias from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;E&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;resources-and-events&quot;&gt;Resources and Events&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;struct MessageHolder has key {
 message: string::String,
 message_change_events: event::EventHandle&amp;lt;MessageChangeEvent&amp;gt;,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This block of code defines a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resource&lt;/code&gt;. Lets understand a bit more of what that means. Here we have defined a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;struct&lt;/code&gt; that has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; ability. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; ability allows a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;struct&lt;/code&gt; to be used as a storage identifier. Its stored at the top-level and acts as storage. When a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;struct&lt;/code&gt; has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; ability it turns it into a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resource&lt;/code&gt;.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Resource&lt;/code&gt; is stored under the account and it exists only when assigned to an account and can be accessed only through that account.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here, we are defining a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resource&lt;/code&gt; called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt;, which contains 2 objects:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; of type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string::String&lt;/code&gt;: which would store the message, and&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message_change_events&lt;/code&gt; of type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event::EventHandle&amp;lt;MessageChangeEvent&amp;gt;&lt;/code&gt;: which stores the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event&lt;/code&gt; when the resource is updated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;In short, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event&lt;/code&gt;s are emitted during the execution of a transaction. Modules can define its own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event&lt;/code&gt; and choose when to emit it upon the execution of the module. Here, we are going to emit an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event&lt;/code&gt; every time the resource is updated. And &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message_change_events&lt;/code&gt; will store such events.&lt;/p&gt;

&lt;h2 id=&quot;drop-and-store&quot;&gt;Drop and store&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;struct MessageChangeEvent has drop, store {
        from_message: string::String,
        to_message: string::String,
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here we are defining a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;struct&lt;/code&gt; with the abilities &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drop&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;store&lt;/code&gt;.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;store&lt;/code&gt;: A &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;struct&lt;/code&gt; needs a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;store&lt;/code&gt; ability as its been stored inside another &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;struct&lt;/code&gt;. If you see, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; struct, it contains &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageChangeEvent&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;drop&lt;/code&gt;: value of this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;struct&lt;/code&gt; can be dropped by the end of the execution of the module.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;And looking into the struct, we have 2 variables&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;from_message&lt;/code&gt; of type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string::String&lt;/code&gt;, and&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;to_message&lt;/code&gt; of type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string::String&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So when an event is emitted, it would contain the old message “from” which it is being updated and the new message “to” which it is being updated.&lt;/p&gt;

&lt;h2 id=&quot;constants&quot;&gt;Constants&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;const ENO_MESSAGE: u64 = 0;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That line is self explanatory. We are defining a constant using the keyword &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;const&lt;/code&gt; named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ENO_MESSAGE&lt;/code&gt; of type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u64&lt;/code&gt; and it has a value of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;functions&quot;&gt;Functions&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#[view]
public fun get_message(addr: address): string::String acquires MessageHolder {
		assert!(exists&amp;lt;MessageHolder&amp;gt;(addr), error::not_found(ENO_MESSAGE));
		borrow_global&amp;lt;MessageHolder&amp;gt;(addr).message
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The first line here &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#[view]&lt;/code&gt; declares this as a view function. Such functions do not modify the state of the blockchain and can be called using an API. A mutable function can also be declared as a view function. But please mark a mutable function as private so that such functions cannot be maliciously called during runtime.&lt;/p&gt;

&lt;p&gt;In the next line, we define the function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_message()&lt;/code&gt;. The keywords used here are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt; which indicates that this function would be publicly accessible and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fun&lt;/code&gt; which just says that this is a function.&lt;/p&gt;

&lt;p&gt;Next, we see the parameters that are passed to the function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(addr: address)&lt;/code&gt;, the name of the parameter is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addr&lt;/code&gt; and it is of type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;address&lt;/code&gt;. It has a return type of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string::String&lt;/code&gt; and it &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;acquires MessageHolder&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;acquires&lt;/code&gt; is required here as the function accesses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; resource and we dont want other parties to modify the value of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resource&lt;/code&gt; when we are reading it. Also, if we have a function that calls a function that uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;acquires&lt;/code&gt; then we also need to mark that child function with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;acquires&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Next, we see an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assert!&lt;/code&gt; statement. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assert&lt;/code&gt; has the following syntax,&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;assert!(condition: bool, code: u64)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;So we see that, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exists&amp;lt;MessageHolder&amp;gt;(addr)&lt;/code&gt; is the condition, which would return a boolean value True or False depending on if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; resource is present for the address that is being passed. If its not present we throw an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;error&lt;/code&gt; with the const code we declared earlier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ENO_MESSAGE&lt;/code&gt;. Incase, it is present. we return a immutable reference of the message that is present in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;borrow_global&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;borrow_global&lt;/code&gt; has the following syntax&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;borrow_global&amp;lt;T&amp;gt;(address): &amp;amp;T
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;It looks for a type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;T&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;address&lt;/code&gt;. If its present it returns an immutable reference to that object. in the code we can see that once it is returned we are reading the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.message&lt;/code&gt; parameter from the object and returning it.&lt;/p&gt;

&lt;p&gt;Alright, now that we have the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_message&lt;/code&gt; function defined that would read the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; that is set in the chain, lets start defining the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set_message&lt;/code&gt; function that would set the message to what we want on the chain.&lt;/p&gt;

&lt;h2 id=&quot;mutable-functions&quot;&gt;Mutable Functions&lt;/h2&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public entry fun set_message(account: signer, message: string::String)
    acquires MessageHolder {
        ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We see the function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set_message&lt;/code&gt; declared here like before. It has an extra keyword called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;entry&lt;/code&gt;. An &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;entry&lt;/code&gt; modifier to a function allows to invoke these functions directly. And this allows to specify which function to begin the execution with. Thus, they can be considered as the “main” function in the module.&lt;/p&gt;

&lt;p&gt;Next&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let account_addr = signer::address_of(&amp;amp;account);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;we get the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;address&lt;/code&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signer&lt;/code&gt; using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;address_of&lt;/code&gt; function which takes in a reference to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;account&lt;/code&gt;. Next we see.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if (!exists&amp;lt;MessageHolder&amp;gt;(account_addr)) {
	move_to(&amp;amp;account, MessageHolder {
		message,
		message_change_events: account::new_event_handle&amp;lt;MessageChangeEvent&amp;gt;(&amp;amp;account),
	})
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We check if the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resource&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; exists in the given account address. Incase it does not we create a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; and move that resource under the account using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;move_to&lt;/code&gt; function.&lt;/p&gt;

&lt;p&gt;Incase, it does exist&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;else {
	let old_message_holder = borrow_global_mut&amp;lt;MessageHolder&amp;gt;(account_addr);
	let from_message = old_message_holder.message;
	event::emit_event(&amp;amp;mut old_message_holder.message_change_events, MessageChangeEvent {
			from_message,
			to_message: copy message,
	});
	old_message_holder.message = message;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;borrow_global_mut&lt;/code&gt; to get a mutable reference of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; resource in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;account_addr&lt;/code&gt; and get the message stored in it. We emit an event using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;event::emit_event&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;emit_event&lt;/code&gt; accepts a reference to the event handle and a message. Here in our case we are passing a reference of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message_change_events&lt;/code&gt; in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; resource and a new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageChangeEvent&lt;/code&gt; that contains the old and the new message. After that we set the message in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; resource to the new &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; that we have received.&lt;/p&gt;

&lt;p&gt;Alright, that defines our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set_message&lt;/code&gt; function.&lt;/p&gt;

&lt;h2 id=&quot;test-functions&quot;&gt;Test Functions&lt;/h2&gt;
&lt;p&gt;Now that we have our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_message&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set_message&lt;/code&gt; function declared lets write some tests to verify that everything works as expected. So moving down the file next we see a test function defined.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#[test(account = @0x1)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The first line here declares that we are going to write a test function. And it mentions an account &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;account = @0x1&lt;/code&gt; which is the account through which this module is going to be tested. Here we set the account to a random account address that is created using a built-in function for testing purposes. Whenever, a module or a module member is marked for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test&lt;/code&gt; then it will not be included in the bytecode when compiled, unless compiled for testing.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public entry fun sender_can_set_message(account: signer) acquires MessageHolder {
    ...
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Alright, next we just write a function as before. Please note that this is a test function. And thus when compiled normally (ie not for testing) this function wont be included in the bytecode. Such a test function, doesnt accept any parameters other than the type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signer&lt;/code&gt;, if passed any parameters other than the type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signer&lt;/code&gt; it will result in an error when run.&lt;/p&gt;

&lt;p&gt;Also, the arg name passed in testing annotation &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;account = @0x1&lt;/code&gt; should match the parameter name that is being passed in the function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sender_can_set_message(account: signer)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And then we get the account address of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signer&lt;/code&gt; and store it in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addr&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let addr = signer::address_of(&amp;amp;account);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create_account_for_test()&lt;/code&gt; and pass it the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;addr&lt;/code&gt; to create an account for the test purposes.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aptos_framework::account::create_account_for_test(addr);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We declare a variable called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stra&lt;/code&gt; and store the string &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Hello, Move&quot;&lt;/code&gt; in that.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let stra = string::utf8(b&quot;Hello, Move&quot;);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Then we use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set_message&lt;/code&gt; function that we have already defined above to set a message in this test account.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;set_message(account,  stra);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We then use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_message&lt;/code&gt; function defined above, to retrieve the message we have set in the above line.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let rmsg = get_message(addr);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And finally, the check to see that message that we defined initially &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stra&lt;/code&gt; matches with the message that was returned using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_message&lt;/code&gt; that is stored in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rmsg&lt;/code&gt;. Incase it doesnt match, we throw the error code &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ENO_MESSAGE&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;assert!(
 rmsg == stra,
 ENO_MESSAGE
);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That defines the test function that was written. And additionally that explains the entire file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_move.move&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;unit-tests&quot;&gt;Unit Tests&lt;/h2&gt;
&lt;p&gt;One can also write unit tests in seperate files and aptos will pick that up based on the testing annotations. And test all the functions. Like for an example we have another file in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sources/&lt;/code&gt; directory named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_move_test.move&lt;/code&gt;. This file has a test only module declared using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;#[test_only]&lt;/code&gt; and thus this module will be included only when compiled for testing.&lt;/p&gt;

&lt;p&gt;The file name can be anything, it doesnt necessarily need to have a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_test.move&lt;/code&gt; suffix. As long as there are test modules and functions declared using the test annotations, the compiler will pick it up while testing.&lt;/p&gt;

&lt;p&gt;Looking into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_move_test.move&lt;/code&gt; file we will see very similar things as before. It starts with&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#[test_only]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Which declares this entire module as test only.&lt;/p&gt;

&lt;p&gt;Next, it declares the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message_tests&lt;/code&gt; module.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;module hello_move::message_tests {
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;After which it declares some of the aliases that we will use. Note that we also declared the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_move::message&lt;/code&gt; that is the module we just wrote in the other file.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;use std::signer;
use std::unit_test;
use std::vector;
use std::string;
use hello_move::message;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Moving from there, we declare a function named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_account()&lt;/code&gt; to get the account we will use for testing purposes. We use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create_signers_for_testing()&lt;/code&gt; to create &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signer&lt;/code&gt; for testing. It returns a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vector&lt;/code&gt; and we then use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pop_back&lt;/code&gt; method to return that one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;signer&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;fun get_account(): signer {
   vector::pop_back(&amp;amp;mut unit_test::create_signers_for_testing(1))
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Next, we see the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sender_can_set_message&lt;/code&gt; function which is exactly similar to the one we wrote in the other file except here we get the test account address using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_account()&lt;/code&gt; function that we just defined.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;let account = get_account();
let addr = signer::address_of(&amp;amp;account);
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Please note again, that this is a test only module, and the compiler will run this test and include in the bytecode, only when compiled for testing. Alright, that should explain the workings of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_move_test.move&lt;/code&gt; file.&lt;/p&gt;

&lt;h2 id=&quot;movetoml&quot;&gt;Move.toml&lt;/h2&gt;
&lt;p&gt;Now, lets take a look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Move.toml&lt;/code&gt; file that is defined at the root of the package.&lt;/p&gt;

&lt;p&gt;Each move package has a manifest file at the root with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.toml&lt;/code&gt; extension and it contains the metadata for the package such as name, version, and dependencies. Taking a look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Move.toml&lt;/code&gt; file.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[package]
name = &quot;HelloMove&quot;
version = &quot;0.0.0&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here we are declaring the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;name&lt;/code&gt; and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt; of the package.&lt;/p&gt;

&lt;p&gt;Next, we are declaring the named address &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello_move&lt;/code&gt; but we are leaving it undefined using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_&lt;/code&gt; so that would mean that we need to pass the named address when we are compiling.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[addresses]
hello_move = &quot;_&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And then we declare a dependency on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aptos-framework&lt;/code&gt; as we have already seen that we use a few functions from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;aptos-framework&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[dependencies]
AptosFramework = { local = &quot;./framework/aptos-framework&quot; }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And that should define all the contents of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Move.toml&lt;/code&gt; file. And thus all the files that are there in the package.&lt;/p&gt;

&lt;h2 id=&quot;compile-test-and-publish&quot;&gt;Compile, Test and Publish&lt;/h2&gt;
&lt;p&gt;Now that we know what all the files are about and what they contain. We can go ahead and compile the package. But first lets start with initializing aptos.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aptos init --network devnet
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Tap Enter and follow through. The output should look something like this.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Configuring for profile default
Configuring for network Devnet
Enter your private key as a hex literal (0x...) [Current: Redacted | No input: Generate new key (or keep one if present)]

No key given, keeping existing key...
Account c1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76 has been already found onchain

---
Aptos CLI is now set up for account c1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76 as profile default!  Run `aptos --help` for more information about commands
{
  &quot;Result&quot;: &quot;Success&quot;
}

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Now lets fund this account using a faucet.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aptos account fund-with-faucet --account default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We should see an output similar to this&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
  &quot;Result&quot;: &quot;Added 100000000 Octas to account c1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now lets compile the module using&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aptos move compile --named-addresses hello_move=default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Remember we kept the named address in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Move.toml&lt;/code&gt; file empty so we need to pass the named address as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default&lt;/code&gt; one when we are compiling. Compilation output should look similar to this&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Compiling, may take a little while to download git dependencies...
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING HelloMove
{
  &quot;Result&quot;: [
    &quot;c1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76::message&quot;
  ]
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This would mean that the file was successfully compiled.&lt;/p&gt;

&lt;p&gt;Next, lets test the modules&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aptos move test --named-addresses hello_move=default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;We should be able to see both the tests passing&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING HelloMove
Running Move unit tests
[ PASS    ] 0xc1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76::message::sender_can_set_message
[ PASS    ] 0xc1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76::message_tests::sender_can_set_message
Test result: OK. Total tests: 2; passed: 2; failed: 0
{
  &quot;Result&quot;: &quot;Success&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;And finally lets publish the module using&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aptos move publish --named-addresses hello_move=default
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;The output you will see is similar to this.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Compiling, may take a little while to download git dependencies...
INCLUDING DEPENDENCY AptosFramework
INCLUDING DEPENDENCY AptosStdlib
INCLUDING DEPENDENCY MoveStdlib
BUILDING HelloMove
package size 1765 bytes
Do you want to submit a transaction for a range of [140300 - 210400] Octas at a gas unit price of 100 Octas? [yes/no] &amp;gt;
yes
{
  &quot;Result&quot;: {
    &quot;transaction_hash&quot;: &quot;0x22328486cd87414663d4461182b5f2de6447b29f9c32c682b152f6c127276568&quot;,
    &quot;gas_used&quot;: 1403,
    &quot;gas_unit_price&quot;: 100,
    &quot;sender&quot;: &quot;c1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76&quot;,
    &quot;sequence_number&quot;: 0,
    &quot;success&quot;: true,
    &quot;timestamp_us&quot;: 1690433681245985,
    &quot;version&quot;: 40008336,
    &quot;vm_status&quot;: &quot;Executed successfully&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we have successfully published our module. We can go to the aptos explorer and check the transaction hash.&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/firstmovetransaction.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Move Transaction&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;Here if we notice we can see the payload, ie the message that we want to be stored in the chain being passed.&lt;/p&gt;

&lt;h2 id=&quot;interact-with-the-module&quot;&gt;Interact with the Module&lt;/h2&gt;
&lt;p&gt;Now that we have our module published on the chain, lets start interacting with the module.&lt;/p&gt;

&lt;p&gt;To interact with our published module lets first trigger the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set_message&lt;/code&gt; method and update the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; stored in the resource &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aptos move run --function-id 'default::message::set_message' --args 'string:first move with move'
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here we are setting the message to ‘first move with move’. The output should be similar to the following.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Do you want to submit a transaction for a range of [50300 - 75400] Octas at a gas unit price of 100 Octas? [yes/no] &amp;gt;
yes
{
  &quot;Result&quot;: {
    &quot;transaction_hash&quot;: &quot;0x4e7d9e1ba498f3367f714d7e425f184f8d64d7d5d68ad962f30273384cea6464&quot;,
    &quot;gas_used&quot;: 504,
    &quot;gas_unit_price&quot;: 100,
    &quot;sender&quot;: &quot;c1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76&quot;,
    &quot;sequence_number&quot;: 1,
    &quot;success&quot;: true,
    &quot;timestamp_us&quot;: 1690434192512775,
    &quot;version&quot;: 40055278,
    &quot;vm_status&quot;: &quot;Executed successfully&quot;
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;And now that the message is set, we can get the message using the view function that we wrote &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_message&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl https://fullnode.devnet.aptoslabs.com/v1/accounts/c1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76/resource/0xc1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76::message::MessageHolder | json_pp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here substitute the url with your account address.&lt;/p&gt;

&lt;p&gt;Recall, its a view function, so we can call it direcly like an API. So we can actually just directly go to this link in the browser and see our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; that is stored in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MessageHolder&lt;/code&gt; resource.&lt;/p&gt;

&lt;p&gt;The output for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; should give a result similar to this.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;{
   &quot;data&quot; : {
      &quot;message&quot; : &quot;first move with move&quot;,
      &quot;message_change_events&quot; : {
         &quot;counter&quot; : &quot;0&quot;,
         &quot;guid&quot; : {
            &quot;id&quot; : {
               &quot;addr&quot; : &quot;0xc1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76&quot;,
               &quot;creation_num&quot; : &quot;4&quot;
            }
         }
      }
   },
   &quot;type&quot; : &quot;0xc1afaaf97eaa61128b5b1439ee9732ef581b70f0e56f740f1bcf964e5427cf76::message::MessageHolder&quot;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Here in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;message&lt;/code&gt; key you can see the message that we have just set.!&lt;/p&gt;

&lt;p&gt;You can continue with updating the message as many times as required as you want using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set_message&lt;/code&gt; function and then reading it. Do note that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;set_message&lt;/code&gt; initiates a transaction that is it updates the state of the chain and thus you do need to pay gas everytime you make a transaction. If you see above, you can see the amount of gas used and the price per gas. This is why initially the account needs to be funded so that we can pay the gas required. The current account can be funded using a faucet as it is on the devnet, if on mainnet you need to have APT in your account to pay for this gas.&lt;/p&gt;

&lt;p&gt;Alright, Congratulations! You now understand Move language, how to compile, test and publish a Move module and interact with that Move module!
As a next step, you can head over to the aptos.dev docs to learn more about Move and the Aptos Chain.&lt;/p&gt;

&lt;h3 id=&quot;references&quot;&gt;References&lt;/h3&gt;
&lt;p&gt;[1] &lt;a href=&quot;https://github.com/aptos-labs/aptos-core/tree/main/aptos-move/move-examples/move-tutorial&quot;&gt;Move Tutorial from aptos-core&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;[2] &lt;a href=&quot;https://aptos.dev&quot;&gt;Aptos Docs&lt;/a&gt;&lt;/p&gt;</content><author><name></name></author><category term="web3" /><category term="blockchain" /><category term="token" /><category term="defi" /><category term="finance" /><category term="decentralized" /><summary type="html">In this article, we are going to take our first step with the Move Programming Language. Learn about some intricate details of how it works. Learn a bit about how to write Move and understand its syntax and publish our first Move Module on the Aptos Chain. We will setup our local CLI to achieve all this.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/banners/move_header.png" /><media:content medium="image" url="http://localhost:4000/assets/images/banners/move_header.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">DeFi - The future of Finance</title><link href="http://localhost:4000/2023/01/23/defi.html" rel="alternate" type="text/html" title="DeFi - The future of Finance" /><published>2023-01-23T00:00:00+05:30</published><updated>2023-01-23T00:00:00+05:30</updated><id>http://localhost:4000/2023/01/23/defi</id><content type="html" xml:base="http://localhost:4000/2023/01/23/defi.html">&lt;p&gt;With the traditional financial system that we have in place today it is difficult to get a lot of things done. Done in the right way, as well as in time, as well as with minimal funds. Lot of things in today’s banking system that exists in today’s banking system/other financial institutions are running technologies that are decades old and have not been upgraded. There’s space for lot of innovation. But that is not why traditional finance is gonna lose its edge, its cause of its &lt;strong&gt;inefficiency involved in what its responsibilities are.&lt;/strong&gt;&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/gamestopshortsqueeze.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Gamestop Short Squeeze Incident (source: Wikipedia)&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;Today’s &lt;strong&gt;financial institutions are run by a group of entitiled individuals behind closed doors and these critical decisions impact billions of people.&lt;/strong&gt; How do you trust their decisions? Why should you trust them with your money? With no say over where your money goes, such institutions can lend your money to high-risk borrowers and thus you have to trust them to not mismanage your money. And a group of people making decisions in a closed space usually leads to &lt;strong&gt;billion-dollar banking scandals&lt;/strong&gt;. In addition to that, with a centralized authority in place and with a control over the market, they can close down markets at will! &lt;a href=&quot;https://insider.finology.in/finance/game-stop-saga&quot;&gt;source - GameStop Saga&lt;/a&gt; Also, with such a traditional setting in-place, &lt;strong&gt;markets have to close as human labourers need breaks and thus it often runs in the business hours of specific time-zones.&lt;/strong&gt;&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/bankslongprocessingtime.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;A consumer showing distress and asking clarification for unusual high processing time.(source: Guardian)&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;The responsibilities involved by financial institutions like &lt;strong&gt;settlement of stocks, bonds, and others takes a really long time to clear&lt;/strong&gt;, in the matter of days and &lt;strong&gt;human capital involved in these processes are also massive, and thus the processes gets more expensive on the end customers&lt;/strong&gt;, you and i. And &lt;strong&gt;more so, when it comes to international banking and remittance services.&lt;/strong&gt; Banks have to go through and comply with the laws and regulations of different governments and financial institutions overseas when doing transactions internationally which leads to this delay and expense in cost.&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/unbanked.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;World top 5 unbanked countries as of 2021.(source: CFTE)&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;There’s &lt;strong&gt;millions across the globe that doesnt have a bank account and dont have proper access to financial services.&lt;/strong&gt; Such decisions taken by today’s financial institutions will impact the livelihood of these people as they &lt;strong&gt;wont be now eligible to get paid.&lt;/strong&gt; Getting a &lt;strong&gt;bank account is intensely tied with your identity&lt;/strong&gt;, as well. All in all, trusting some individuals with our money and with the entitlement to choose who gets access to financial services and who does not is not something that is acceptable.&lt;/p&gt;

&lt;p&gt;This is where DeFi comes in.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In this article, we will see:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-defi&quot;&gt;What is DeFi?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#what-can-you-do-with-defi&quot;&gt;What can you do with DeFi?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#how-does-defi-work&quot;&gt;How does DeFi work?&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;what-is-defi&quot;&gt;What is DeFi?&lt;/h2&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/importanceofdefi.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Reddit Conversation - Importance of DeFi.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;DeFi acts as an &lt;strong&gt;umbrella for the various financial products and services that the decentralized world has to offer and will offer in the future.&lt;/strong&gt; DeFi will be able to &lt;strong&gt;do everything that traditional finance ie CeFi (Centralized Finance) can and more.&lt;/strong&gt; CeFi is built on proprietary technologies and algorithms that each company has to work on their own. The backbone for DeFi is written using OSS (Open Source Software) that anybody can audit and thus is much less prone to security issues and this enables intercommunication between different dApps (Decentralized Apps). One such backbone is, Ethereum. Almost all major dApps are written on the Ethereum Blockchain. Since the backbone on which the transactions happen has already been defined anybody can utilize this to build their own DeFi applications, and thus this makes the barrier for new people to enter this industry far-lower than what it has been before where you have to work out everything from the very start.&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/beyourownbank_loopring.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Tweet from Loopring.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;With DeFi, &lt;strong&gt;you are in control of your money!&lt;/strong&gt; You say where your money goes and how it is spent. &lt;strong&gt;You dont need to verify your identity to have a DeFi account that can make transactions.&lt;/strong&gt; All you need is a phone and internet connection! Viola! You can send and receive money to anywhere in the world! And more so, the &lt;strong&gt;transaction can happen in minutes&lt;/strong&gt; :) The &lt;strong&gt;transactions that are happening are open to all and can be audited anytime.&lt;/strong&gt; This doesnt mean that anybody knows what you are spending on. &lt;strong&gt;Transaction activity is pseudonymous&lt;/strong&gt;, thus everybody gets to know how the money is flowing from an account to another, or if a particular wallet has been acting suspiciously, but not their real-life identity. A lot of the problem that was mentioned above has been completely addressed with DeFi. Also, with DeFi, a lot of things are automated completely to the point where there wont be a need for markets to close at all :)&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/bitcoinethereum.jpg&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Bitcoin and Ethereum.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;Bitcoin&lt;/a&gt; started the true DeFi movement. It &lt;strong&gt;allowed people who dont trust each other to transact across the globe without a trusted intermediary.&lt;/strong&gt; They way it works is by everybody &lt;strong&gt;agreeing to a ledger which acts as the source of truth&lt;/strong&gt;, and no single/group of malicious actors can tamper with it. &lt;strong&gt;Bitcoin is open to anyone and everybody is treated equally irrespective of their backgrounds and nationalities.&lt;/strong&gt; More to start transacting you dont need to verify your identity or anything. &lt;a href=&quot;&quot;&gt;Ethereum&lt;/a&gt; takes this concept further where it &lt;strong&gt;makes the money programmable&lt;/strong&gt; using &lt;a href=&quot;&quot;&gt;Smart Contracts&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-can-you-do-with-defi&quot;&gt;What can you do with DeFi?&lt;/h2&gt;

&lt;p&gt;With DeFi you can do pretty much &lt;strong&gt;everything that you can do with Centralized Finance&lt;/strong&gt; and probably more in a more open and secure way. Say you want to &lt;strong&gt;trade, invest to build your portfolio, or you can get insurance, you can borrow money using collaterals, lend money and gain interests&lt;/strong&gt;, and obviously the basic use cases such as send/receive money locally or from around the globe and getting loans (decentralized loans).&lt;/p&gt;

&lt;p&gt;Let’s look at a few companies who are enabling DeFi and stand-out considerably among others:&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/uniswap.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Uniswap - Decentralized Exchange.&lt;/p&gt;
    
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://uniswap.org/ecosystem&quot;&gt;&lt;strong&gt;Uniswap&lt;/strong&gt;&lt;/a&gt;: &lt;strong&gt;Decentralized Crypto Exchange (DEX) that is run on Smart Contracts without any single governing central authority.&lt;/strong&gt; In centralized platforms like &lt;a href=&quot;&quot;&gt;Coinbase&lt;/a&gt; and &lt;a href=&quot;&quot;&gt;Binance&lt;/a&gt;, your crypto and private keys is held for you by these single authorities for security, trades are governed by these single authorities and they follow the &lt;a href=&quot;&quot;&gt;order-book system&lt;/a&gt; to facilitate trading. Uniswap on the other hand is not governed by a single authority and has its own governance token &lt;a href=&quot;&quot;&gt;UNI&lt;/a&gt;. It follows the Automated Liquidity Protocol to facilitate trades. Its open-source and you can list your tokens free of charge on the platform, contrary to platforms which are centralized where you need to pay to list token for trading. With Uniswap you dont give up your private keys like centralized exchanges which keeps you safe if ever the exchange gets hacked.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/pooltogether.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;PoolTogether - Get rewards on saving your money.&lt;/p&gt;
    
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://pooltogether.com/&quot;&gt;&lt;strong&gt;PoolTogether&lt;/strong&gt;&lt;/a&gt;: Allows you to &lt;strong&gt;deposit your money and win prizes on it.&lt;/strong&gt; Your money is pooled with others and at the end one lucky winner from the pool is given a award! And this is where it gets amazing, if you dont win the pool you get your entire money back! Its a no risk gamble :)&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/aave.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Aave - Lend and Borrow Crypto.&lt;/p&gt;
    
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://aave.com/&quot;&gt;&lt;strong&gt;Aave&lt;/strong&gt;&lt;/a&gt;: Allows you to &lt;strong&gt;borrow or lend cryptocurrency without going through centralized financial institutions.&lt;/strong&gt; Other than Ethereum, Aave is also available in Avalanche, Optimism, Polygon, Arbitrum and Aave Arc. For getting loans, one has to put collaterals which can be some Stablecoin or even real-world assets. For real-world assets, Aave ties up with Centrifuge to tokenize real-world assets first and then you can use them as collaterals. Aave is a DAO and its governance token is aToken. Same as the borrowing and lending model, the borrower has to pay interest and the lender gets the interest.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.augur.net&quot;&gt;Augur&lt;/a&gt;: Its a &lt;strong&gt;decentralized platform in the prediction market.&lt;/strong&gt; You vote on the outcome on an event and if you are right then you get rewards based on that. You can strenghthen your vote by putting in more value for it. Based on your bid, you get more rewards, if you are wrong then you lose the money that you have put in.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/gitcoin.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Gitcoin - Crowdfund your projects!&lt;/p&gt;
    
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;gitcoin.co&quot;&gt;Gitcoin&lt;/a&gt;: Allows you to &lt;strong&gt;crowdfund for your project ideas.&lt;/strong&gt; It helps connect projects with suitable donors. As well as it helps developers to get paid while contributing to their favorite open-source projects! Its a dream for many developers. There are projects right now that partially as well as completely supported by Gitcoin! It employs Quadratic Funding (apart from direct funding) where the projects that the community deems more important have better access to the community funds.&lt;/li&gt;
&lt;/ul&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/tornadocash.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;TornadoCash - Make anonymous transactions.&lt;/p&gt;
    
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://ipfs.io/ipns/tornadocash.eth/&quot;&gt;Tornado Cash&lt;/a&gt;: Allows to &lt;strong&gt;make transactions with complete anonymity.&lt;/strong&gt; Its a noncustodial platform where the money deposited by the user goes into TornadoCash’s liquidity pool which acts as a cryptocurrency mixer, thus it becomes impossible to track the links between deposit and the withdrawal addresses. The user is given with a secret hash while depositing the amount which they use at the time of withdrawal to prove the ownership over the funds. TornadoCash was sanctioned by the US treasury on August 7, 2022 &lt;a href=&quot;https://home.treasury.gov/news/press-releases/jy0916&quot;&gt;read more&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;how-does-defi-work&quot;&gt;How does DeFi work?&lt;/h2&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/blockchainplatformslist_reviews_gartner.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;A few of the popular blockchain that are listed in Gartner Blockchain reviews.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;DeFi Applications &lt;strong&gt;leverages the blockchain technology to enable decentralization.&lt;/strong&gt; It thus leverages cryptocurrency and the power of smart contracts in chains like Ethereum to replace intermediaries and program certain decisions on how the money is going flow. A smart contrat is a type of Ethereum account that can store funds and send/receive them based on certain conditions. As everything in the chain, once deployed everybody can audit the contract and it cannot be tampered with, to update a contract it has to deployed as a new block in the chain. The openess of a contract allows malicious contracts to soon come under the public inspection.&lt;/p&gt;

&lt;p&gt;Currently, &lt;strong&gt;majority of the dApps are being built on Ethereum.&lt;/strong&gt; That means many of these dApps can talk with each other cause the backbone for them is the same. No one owns Ethereum or the smart contracts and thus no one can change the rules for a single person or no single central authority has the power to change laws as they wish for their benefit like with centralized financial institutions.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/centralizedbankarebad.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Reddit conversation about centralized financial institutions.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;Centralized financial institutions as discussed comes with a lot of drawbacks. While its extremely benificial for the people who are inside these institutions, but its not so much for the people outside. As the outside people will constantly be taken advantage of and played with by the people in power. Treating everybody equally and allowing privacy through DeFi, among other major features will enable DeFi as the future of finance. Its truly &lt;strong&gt;inevitable.&lt;/strong&gt; :)&lt;/p&gt;

&lt;!--
Points:

Cons of traditional Finance:
---
- Settlement of stocks, bonds and other financial instruments takes days to clear and requires a massive amount of human capital involved in the process. 
-/ Key decisions impacting millions if not billions of people are /made behind the closed doors by a group of privileged few. 
-/ Billion-dollar banking scandals
-/ Massive inefficiencies and high cost when it comes to international banking and remittance services
-/ Unequal access to financial services with billions of unbanked people across the globe. Financial services can block you from getting paid.
- hiring thousands of employees just to keep maintaining inefficient processes and being compliant with ever-changing banking regulations.
- A super high barrier to entry for the new players making it almost impossible to start a new financial company without access to the massive amount of capital, stifling innovation.
-/3 built with proprietary technologies and algorithms that each company has to make from scratch. 
-/ Governments and centralized institutions can close down markets at will.
- premium to financial services because intermediary institutions need their cut.
-/ You have to trust companies not to mismanage your money, like lend to risky borrowers.
-/ Financial activity is tightly coupled with your identity.
---


Flow:
-1 Cons of traditional finance, this is where DeFi comes in.
-2 In this article we are going to cover
-3 What is DeFi
-4 What can you do with DeFi
-5 How does DeFi work?

What is DeFi?
- A system that can provide access to well-known financial services such as payments, lending, borrowing and trading in a more efficient, fair and open way.  

- Permissionless  – as everyone with a browser and the Internet connection can access them. There is no document verification, no need to provide income statements, nationality or race doesn’t matter – everyone is treated in the exact same way. 

- Censorship-resistant – as no other parties can deny us access to these services.
- Open – as everyone can build a new defi application and contribute to the ecosystem. In contrast to traditional finance, new applications can leverage the existing protocols and build on top of existing solutions. 
- Efficient – as all operations are settled almost immediately. It doesn’t matter that counterparties may be in completely different geographic locations with inconsistent laws and regulations. On top of this, most of DeFi protocols can operate with no or minimal human involvement. 
- The idea is to allow anyone with internet access to lend, borrow and bank without going through middlemen. 


What can you do with DeFi.
- Borrow and Lend: Compound

Automated Token Exchange: Uniswap

Prediction Markets: Augur

Synthetic Assets: Synthetix

No-loss savings games: PoolTogether

- 


How does it Work?
- permissionless means anyone can deploy transparent code and users can interact with each other through computer code without the need for intermediaries such as banks, brokers and lawyers etc.
- cryptocurrencies and smart contracts to provide services that don't need intermediaries.
- art contract replaces the financial institution in the transaction. A smart contract is a type of Ethereum account that can hold funds and can send/refund them based on certain conditions.
- Contracts are also public for anyone to inspect and audit. This means bad contracts will often come under community scrutiny pretty quickly.

Conclusion
- Inevitable :)
--&gt;

&lt;!---

Ref:
https://www.coindesk.com/business/2021/02/04/what-is-uniswap-a-complete-beginners-guide/


Today's **financial institutions are run by a group of entitiled individuals behind closed doors and these critical decisions impact billions of people.** How do we trust their decisions? Why should we trust their decisions? And more than decisions why should you trust them with your money? With such systems, its possible for the government to print more money at will! You know what it does to the ones who dont have access to money printing services? It devalues our overall wealth overtime and it leads to inflation. Governments printing money is not something new here are a few sources [] Such incidents and others lead to **billion-dollar banking scandals**.

--&gt;</content><author><name></name></author><category term="web3" /><category term="blockchain" /><category term="token" /><category term="defi" /><category term="finance" /><category term="decentralized" /><summary type="html">With the traditional financial system that we have in place today it is difficult to get a lot of things done. Done in the right way, as well as in time, as well as with minimal funds. Lot of things in today’s banking system that exists in today’s banking system/other financial institutions are running technologies that are decades old and have not been upgraded. There’s space for lot of innovation. But that is not why traditional finance is gonna lose its edge, its cause of its inefficiency involved in what its responsibilities are.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/banners/defi_article_banner_final2.png" /><media:content medium="image" url="http://localhost:4000/assets/images/banners/defi_article_banner_final2.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">What is NFT?</title><link href="http://localhost:4000/2023/01/14/what-is-nft.html" rel="alternate" type="text/html" title="What is NFT?" /><published>2023-01-14T00:00:00+05:30</published><updated>2023-01-14T00:00:00+05:30</updated><id>http://localhost:4000/2023/01/14/what-is-nft</id><content type="html" xml:base="http://localhost:4000/2023/01/14/what-is-nft.html">&lt;p&gt;An &lt;strong&gt;asset in the physical world that you own is comparable to a NFT&lt;/strong&gt;, like land, car, or house. It can be &lt;strong&gt;unique and scarce, but not necessarily!&lt;/strong&gt; Think about that pencil that you bought yesterday that is also an asset that you own, but that is neither unique not scarce. With an asset in the physical world, you can take it and it sits in your house or similar. And there’s never a question of ownership as it resides with you. Where is Mr. Karkman’s WWII rifle? It sits in Mr. Housmith’s residence. So it should now obviously belong to Mr. Housmith.&lt;/p&gt;

&lt;p&gt;With assets in the digital world. Its &lt;strong&gt;difficult to represent ownership&lt;/strong&gt;. You can have a jpeg of your cat and so you might say that you own that image. You send the image to your neighbor who wants to see your cat. And now she has access to the image. And she can claim that she owns the image. She shares it on social. And some cat guy gets obssessed and downloads it from the internet. And shares it in his group and claims its his image.&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/watermarkedimage.jpg&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;A watermarked image from Shutterstock.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;You probably have seen people watermarking their PDFs, images, videos to represent ownership. And obviously there are tools that can be used to remove watermarks from anything. And with recent research in AI, we can remove watermarks or for that matter any kind of marks from images without any hassle and with no marks left on the image that gives off that there was a watermark.&lt;/p&gt;

&lt;p&gt;If you have noticed something in the 2010s internet era, &lt;strong&gt;community would call out if they see a copycat trying to claim something that is not theirs&lt;/strong&gt;. Lets say, if there’s some account with a lot of followers, posting a picture(or other asset). And that gets copied by someone and that someone tries to claim its theirs. That doesnt work!! Cause everybody knows its not their work! Everybody saw that asset come out of the popular person’s account. So ideally, this second guy cant claim its his, cause everybody knows the truth. This same thing happens with Linkedin Posts nowadays, where if one post is getting a lot of traction, someone else would just copy paste the entire post without giving credits or anything. The people who know that the other guy is just copying cause they have seen the original post. And there might be some who didnt come across the original ones and thus they keep thinking that this copied one is the original one.!&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/linkedinreposts.jpg&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Same content being copy/pasted across the Social Media with successful traction.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;As you see, it is very &lt;strong&gt;difficult to represent ownership in the digital world&lt;/strong&gt;. Everybody can get their hands on the copy of your image, file, audio, video and other data/assets and can easily claim it is theirs.&lt;/p&gt;

&lt;p&gt;This is where blockchain and thus, NFT comes in.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;In this article, we are going to see:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-nft&quot;&gt;What is NFT?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#what-are-nfts-used-for&quot;&gt;What are NFTs used for?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#example-of-nfts&quot;&gt;Example of NFTs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;what-is-nft&quot;&gt;What is NFT?&lt;/h2&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/assettypes.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Asset Types.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;NFT stands of Non-Fungible Token. &lt;strong&gt;They represent ownership of unique digital items&lt;/strong&gt;. We can tokenize any digital asset such as art, pictures, moments, real-estate, game assets, literally anything digital. Ownership of these tokens are secured by the blockchain and nobody can modify the records of these ownership. Just like i was telling that if a post is now seen my millions and now somebody else try to come in and copy paste the same post and try to claim its theirs, nobody would believe this other guy. &lt;strong&gt;Everybody knows what is the truth.&lt;/strong&gt; Similarly, anytime somebody purchases something, or any kind of activity/transaction is recorded in the blockchain. And that means, that everybody now is aware of the truth. And one person claiming something different wont effect the truth.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Non-fungible&lt;/strong&gt; is an economic term that is used to describe assets which have unique properties, and thus are &lt;strong&gt;not interchangeable for other similar items&lt;/strong&gt;. Like the chair you sit at, or a computer, that is to say any asset with unique properties. &lt;strong&gt;Fugible items&lt;/strong&gt; on the other hand &lt;strong&gt;can be exchanged because their value defines them and not their properties&lt;/strong&gt;. Example would be currencies, like Dollars($)/Indian Rupee, 1Rupee is exchangeable for another 1Rupee.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;An asset that has physical form is called tangible asset.&lt;/strong&gt; Examples would be any equipment/machinery, Furnitures, Land (not metaverse land), buildings etc. Digital assets, ie assets that dont have a physical form are called &lt;strong&gt;non-tangible assets.&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;what-are-nfts-used-for&quot;&gt;What are NFTs used for?&lt;/h2&gt;

&lt;p&gt;NFTs are currently being used to achieve different use-cases! Some are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#digital-content&quot;&gt;Digital Content&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#in-game-assets&quot;&gt;In-Game assets&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#domain-names&quot;&gt;Domain Names&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#physical-items&quot;&gt;Physical items&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#nft-backed-loans&quot;&gt;NFT-backed Loans&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#tokengating&quot;&gt;Tokengating&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;digital-content&quot;&gt;Digital Content&lt;/h3&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/hoodenza_overlook.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;A few NFTs from the Hoodenza Collection.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;The Content creators making content, be it art, written content, audio or video &lt;strong&gt;helps make money for the platform which sells ads to the creators content consumers&lt;/strong&gt;. They get exposure in return. Which is good. Exposure is required but if the unique pieces of content that the creators work on throughout, gets them some money that could help them lead better lives, wouldn’t that be great!&lt;/p&gt;

&lt;p&gt;Some platforms like &lt;a href=&quot;youtube.com&quot;&gt;Youtube&lt;/a&gt; allow &lt;strong&gt;creators to make money off the ads that are running on their content&lt;/strong&gt;. But not all. NFTs come in exactly at that place, where the creators dont hand over the ownership of their content to the platform they are using to publicise it.&lt;/p&gt;

&lt;p&gt;Apart from, NFT &lt;strong&gt;enabling creators to sell their content to interested buyers&lt;/strong&gt; who are interested in the art/any form of content that the creator has made. There’s a new concept of Royalties, where the &lt;strong&gt;creator of the content can make some money everytime the content is sold&lt;/strong&gt;. So, without royalties, the creator just makes money when the content is sold first time, as the owner. With royalties, the creator gets royalties everytime the content is transacted irrespective of the new owner, as it is embedded in the chain who the original creator is.&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/eulerbeats_royalties.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Eulerbeat Royalty.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;Royalties is still a developing concept, at the time of writing this blog. The idea is, if you program royalties in your NFT project then you can just sit back and earn every time a purchase is made!! Right now, it lacks accuracy and creators dont get paid what they deserve, but this is gonna fixed with time. As long as you have &lt;strong&gt;opt in royalties programitacally&lt;/strong&gt; you are good! &lt;a href=&quot;https://eulerbeats.com&quot;&gt;EulerBeats&lt;/a&gt; earn an 8% royalty every time the NFT is sold. Recently Opensea also opted in for creator royalties &lt;a href=&quot;/shorts/2023-02-19-opensea-zero-free&quot;&gt;read&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;in-game-assets&quot;&gt;In-game assets&lt;/h3&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/decentraland_ingameassets_compressed.jpg&quot; alt=&quot;MakerDAO&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Decentraland Marketplace.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;With Web3, gaming will take on new heights! Iv explained in-detail how web3 is going to effect gaming here - &lt;a href=&quot;/2023/01/07/web3-gaming.html&quot;&gt;Web3 Gaming&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In brief, you can &lt;strong&gt;own and trade the ingame assets&lt;/strong&gt; that you purchase or receive in the game, &lt;strong&gt;in open marketplaces irrespective of the game where you received it&lt;/strong&gt;. And it can be used in the physical-world to get discounts or can act as passes as these in-game assets are NFTs!&lt;/p&gt;

&lt;h3 id=&quot;domain-names&quot;&gt;Domain Names&lt;/h3&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/arcethens.png&quot; alt=&quot;ENS arc.eth&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;arc.eth&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;The ENS - Ethereum Name Service &lt;strong&gt;provides easier-to-remember names for your eth wallet&lt;/strong&gt; like arc.eth. So instead of remembering someone’s wallet address like 0x829382… they could just simply say “Hey my wallet is arc.eth” and it becomes much more convienient for you to send or receive! Pretty similar to Domain names for IP addresses!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ENS utilizes NFTs.&lt;/strong&gt; So you can trade ENS on NFT marketplaces!! CrazY! It provides with all the features that you get with your wallet, as its just a mapping! To mention a few:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Receive cryptocurrency and other NFTs&lt;/li&gt;
  &lt;li&gt;Point to a decentralized website like &lt;a href=&quot;ethereum.eth&quot;&gt;ethereum.eth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Store other small arbritary information, like links to your different socials.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;physical-items&quot;&gt;Physical Items&lt;/h3&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/tangible_physicalnft.png&quot; alt=&quot;Tangible Store&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Tangible Store - Buy real world goods using NFTs.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;There has been some projects where there has been &lt;strong&gt;efforts on converting physical items to their digital counterparts!&lt;/strong&gt; Like where if you buy a physical item like a car or shoe or real-estate you would receive an NFT as well that can essentially act as a proof of the ownership of that asset. One such example would be of Nike, they recently launched &lt;a href=&quot;https://www.swoosh.nike/&quot;&gt;swoosh&lt;/a&gt; a web3 platform to sell NFT products!&lt;/p&gt;

&lt;p&gt;Additionally, you can &lt;strong&gt;get the deeds when you make a purchase like a car or real-estate in the form of NFTs!&lt;/strong&gt; And since your wallet is completely secure it can also act as a key to different physical assets you own!&lt;/p&gt;

&lt;h3 id=&quot;nft-backed-loans&quot;&gt;NFT-backed loans&lt;/h3&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/makerdao.png&quot; alt=&quot;MakerDAO&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;MakerDAO&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;There are DeFi applications &lt;a href=&quot;#&quot;&gt;Decentralized Finance&lt;/a&gt; that &lt;strong&gt;let you borrow money using collaterals!&lt;/strong&gt; Example of such a platform is &lt;a href=&quot;https://makerdao.com/en/&quot;&gt;MakerDAO&lt;/a&gt;. They allow you to borrow &lt;a href=&quot;#&quot;&gt;DAI (Stablecoin)&lt;/a&gt; by keeping other cryptocurrencies as collateral. Like ETH, or BTC. The collateral gurantees that the lender gets paid even if the borrower is not able to return the amount.&lt;/p&gt;

&lt;p&gt;However it can be the case that you dont have that much amount to keep as collateral, but you own a valuable NFT. So instead of keeping fungible-asset as a token you can ideally be &lt;strong&gt;able to keep a NFT as a collateral&lt;/strong&gt;, which has a required value and that should enable you take the loan as well!&lt;/p&gt;

&lt;p&gt;Similarly, if you have &lt;strong&gt;NFT of physical assets that you own, you would be able to use that as collateral!&lt;/strong&gt;&lt;/p&gt;

&lt;h3 id=&quot;tokengating&quot;&gt;Tokengating&lt;/h3&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/developerdao_gatedcommunity.png&quot; alt=&quot;DeveloperDAO - Gated Community for web3 builders&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;DeveloperDAO - Gated Community for web3 builders.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Tokengating is a way to provide access to gated communities/private chat servers/even events that are happening in the physical world with NFTs!&lt;/strong&gt; So you would be able to access a community/event only if you have access to a certain NFT. For a physical event, it can serve the purpose of buying a ticket.&lt;/p&gt;

&lt;p&gt;The same NFT can be used to &lt;strong&gt;provide access to content/community/event across different websites or different events.&lt;/strong&gt; You just have to connect to your wallet and verify that you own the required token and you are good to go! As NFT is all-about-ownership it is one of the most ideal use cases! Communities like Neo Tokyo gate some of their channels and priviledges to only members who have bought certain NFTs! This helps in true community generation and loyalty.&lt;/p&gt;

&lt;p&gt;The creator also gets to &lt;strong&gt;decide the scarcity of the NFT.&lt;/strong&gt; For example, if the NFT is used to tokengate a movie premiere, then the creator can create 200 exact replicas of the NFT, that would be made available to 200 individuals. Sometimes they can be a bit different like to contain different seat numbers or some special privileges!&lt;/p&gt;

&lt;h2 id=&quot;example-of-nfts&quot;&gt;Example of NFTs&lt;/h2&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/blur.png&quot; alt=&quot;Blur&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Blur NFT Marketplace&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;You can visit marketplaces like &lt;a href=&quot;opensea.io/&quot;&gt;Opensea&lt;/a&gt; or &lt;a href=&quot;https://blur.io/&quot;&gt;Blur&lt;/a&gt; and checkout the most recent NFT projects from different creators! A few projects and token worth mention would be:&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    

        &lt;video autoplay=&quot;&quot; loop=&quot;&quot; controls=&quot;&quot; width=&quot;640&quot; height=&quot;480&quot;&gt;
        &lt;source type=&quot;video/mp4&quot; src=&quot;/assets/videos/sneakernft.mp4&quot; alt=&quot;NFT Sneaker&quot; /&gt;
        &lt;/video&gt;

    
    
        &lt;p class=&quot;image-caption&quot;&gt;NFT Sneaker&lt;/p&gt;
    
&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://app.ens.domains/name/arc.eth/&quot;&gt;arc.eth&lt;/a&gt; - ENS example&lt;/li&gt;
  &lt;li&gt;An NFT shoe using AI - which enables you to the physical shoe itself &lt;a href=&quot;https://www.metagrail.co/auctions/91cf83fb-3477-4155-aae8-6dcb9b853397&quot;&gt;Metagrail&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;In game items &lt;a href=&quot;https://market.decentraland.org/&quot;&gt;Decentraland&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;A NFT ticket that gives you access to physical world events &lt;a href=&quot;https://yh.io/&quot;&gt;yh&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Digital Identity &lt;a href=&quot;https://photochromic.io/&quot;&gt;Photochromic&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Buy physical goods &lt;a href=&quot;https://www.tangible.store/&quot;&gt;Tangible&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Cryptopunks - A digital collectible &lt;a href=&quot;https://cryptopunks.app/&quot;&gt;Cryptopunks&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Degree Certificates as NFT &lt;a href=&quot;https://www.degreecert.com/&quot;&gt;Degreecert&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/ownership_key.jpeg&quot; alt=&quot;NFTs are key to ownership.&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;NFTs are key to ownership.&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;NFTs allows us to prove ownership of digital assets.&lt;/strong&gt; There has been a lot of activity with NFTs. Billions have been spent on NFT transactions. With the recent media, it might seem like its hype and about monkey pictures and only art, but NFTs are much more than that! Decentralization is much more than that, and NFTs will play an integral part in decentralization.&lt;/p&gt;

&lt;p&gt;The world has already been using NFTs to achieve a lot, as we saw some examples above. Lot of people have made fortunes with NFTs. And many more to come. You dont have to be a creator to understand NFTs, &lt;strong&gt;its for anybody who would require ownership of assets&lt;/strong&gt; in the Web3 era :)&lt;/p&gt;

&lt;!--

References:
https://ethereum.org/en/nft/

--&gt;

&lt;!--
Comparable to NFT in the physical-world in a asset that is unique and scrace. 

You get your hands-on your grandfather's rifle. Who fought WWII with it. And now it stands as a symbol in the western wall of your house. You decide to put it a price on it. And a interested buyer takes it away from you.

Here we can think of the rifle as an NFT. Its an asset. An NFT is an asset. That is unique.



Your grandpa was a world-famous scientist, named, Robert Nakrot. Robert's genetically engineered this mammal, that was a hybrid between a mouse, spider and lizard. Uniquely enough, it had some interesting features. This animal recently passed away. And you have got your hands on it

----
You got your hands on one of the Mark IV deep diving suits. You find yourself on the beach next day. Ready to rock and roll. You put your suit on. Half naked people starring at you! They are like who is this?! You dont care.! You do what you are there for! Put your suit on.! And start running towards the water! People are still starring! Some have pulled their phones out by now. You keep running. And a few minutes later you deep inside the ocean! Ahh! What a feeling! You can see multiple school of fish around you! Some shadows you can see at some distance.

Fast-forward.

You come out of the ocean, with a part of ship that was sunk 1000s of years back! The guys see you coming out of the water and come running towards you. You remove your helmet and smile at them :) You stood their holding your knee, a few deep breaths!

Then you yell-out! &quot;This is a part of ship that sunk 1000s of years back!&quot; You hold it high in your hands. They see it glowing! You yell. Five thousand dollars! And its yours to keep! 

You get a few offers and you make the sale :)

What is the point of this?

That part of the ship is unique and authentic. Nobody on 
--&gt;</content><author><name></name></author><category term="web3" /><category term="nft" /><category term="blockchain" /><category term="token" /><category term="digital" /><summary type="html">An asset in the physical world that you own is comparable to a NFT, like land, car, or house. It can be unique and scarce, but not necessarily! Think about that pencil that you bought yesterday that is also an asset that you own, but that is neither unique not scarce. With an asset in the physical world, you can take it and it sits in your house or similar. And there’s never a question of ownership as it resides with you. Where is Mr. Karkman’s WWII rifle? It sits in Mr. Housmith’s residence. So it should now obviously belong to Mr. Housmith.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/nftgallery_oncyber_compressed.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/nftgallery_oncyber_compressed.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Web3 Gaming: The future of Gaming!</title><link href="http://localhost:4000/2023/01/07/web3-gaming.html" rel="alternate" type="text/html" title="Web3 Gaming: The future of Gaming!" /><published>2023-01-07T00:00:00+05:30</published><updated>2023-01-07T00:00:00+05:30</updated><id>http://localhost:4000/2023/01/07/web3-gaming</id><content type="html" xml:base="http://localhost:4000/2023/01/07/web3-gaming.html">&lt;p&gt;The global gaming market has been valued at $195 billion in 2021 (&lt;a href=&quot;https://www.grandviewresearch.com/industry-analysis/video-game-market&quot;&gt;source&lt;/a&gt;). In &lt;strong&gt;2021 alone people have spent $54B on in-game items&lt;/strong&gt; (&lt;a href=&quot;https://www.statista.com/statistics/558952/in-game-consumer-spending-worldwide/&quot;&gt;source&lt;/a&gt;). Thats quite a bit of in-game purchases. For those of you who are new to the modern gaming world, in-game purchases are items that can be bought to enhance certain things that are available in the game. Like weapons, outfits, spells, charms, coins and so on. Going forward lets call these assets.&lt;/p&gt;

&lt;!--![Fortnite Game Store](/assets/images/ingame_items_fornite.png){:style=&quot;display:block; margin-left:auto; margin-right:auto&quot;}{: width=&quot;380&quot;}--&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/ingame_items_fornite.png&quot; alt=&quot;title for image&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Fornite in-game items&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;With a traditional gaming setting what would happen is, these purchases that the gamer is making would be very confined to that particular game itself and the gamer wont be able to utilize or use this anywhere outside the game itself. In other words, what that would mean is, &lt;strong&gt;your assets are centralized&lt;/strong&gt; (with the gaming company) and you wont be able to use it anywhere other than inside the game itself! Your asset looses value outside that particular game world! But what if … YES!&lt;/p&gt;

&lt;p&gt;If you are spending money or time and/or doing some crazy things inside the game which makes you eligible for some asset, be it a new weapon or a new outfit or a new charm to hang on your weapon. &lt;strong&gt;Wouldn’t it be great if you could get a discount on your next Starbucks purchase cause you have unlocked that new asset!&lt;/strong&gt;&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/open_marketplace.png&quot; alt=&quot;title for image&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Open Marketplace to trade NFTs&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;Well that’s just an example of what could happen.! Once your assets become decentralized and has value outside the game world, you can &lt;strong&gt;trade your assets for other things in the open marketplace&lt;/strong&gt; pretty legally and get your hands on some crazy deals!&lt;/p&gt;

&lt;p&gt;Thus, what essentially happens is you &lt;strong&gt;get value in the real-world&lt;/strong&gt; from the time and effort you are putting in the game. And this exactly is the reason, Web3 Gaming has seen some major traction and is expected to grow crazily. If you think logically, this is the way forward. Why would anyone prefer otherwise?!&lt;/p&gt;

&lt;p&gt;We, thus, are going to live in an era, where playing games can give us access to certain private communities, or exclusive shows, or exclusive events or discounts on popular brands and much much more!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;strong&gt;For this post, we are going to see:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;#what-is-web3-gaming&quot;&gt;What is Web3 Gaming?&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#main-features-of-web3-gaming&quot;&gt;Main features of Web3 Gaming&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#some-web3-games&quot;&gt;Some Web3 games!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;what-is-web3-gaming&quot;&gt;What is Web3 Gaming?&lt;/h2&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/web3gamingsection.jpg&quot; alt=&quot;title for image&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Gaming on Blockchain&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;Web3 gaming essentially &lt;strong&gt;decentralizes traditional gaming&lt;/strong&gt;, such that the activities that the gamer perform in the game world, particularly speaking of owning in-game assets and also the decision-making aspects of gaming are delegated away from a central authority.&lt;/p&gt;

&lt;p&gt;Web3 games are &lt;strong&gt;built on top of a blockchain&lt;/strong&gt;. This allows gamers to express their opinions on when and how the game should evolve.&lt;/p&gt;

&lt;p&gt;Web3 gaming also enables the foundation of &lt;strong&gt;play-to-earn&lt;/strong&gt; for players and some changes in the &lt;strong&gt;pay-to-play&lt;/strong&gt; model by offering asset trading.&lt;/p&gt;

&lt;h2 id=&quot;main-features-of-web3-gaming&quot;&gt;Main features of Web3 Gaming&lt;/h2&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/winwin.jpg&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;Web3 Gaming is a win for both gamers and the Gaming Studios!!&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Ownership&lt;/strong&gt; - With games built on top of the blockchain, the games have a value-exchange model where gamers can completely own in-game assets and collectibles as NFTs and trade them as well using cryptocurrencies. In contrast to traditional gaming, where in-game assets has value and use only inside the game, with web3 game assets, gamers get value of them out in the real world!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Interoperability&lt;/strong&gt; - The assets that the gamers collect in a particular game can be used in other games on the same or different blockchains (depends). Not just that, these game assets that are now available to the gamers can be traded on the open market.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Game Studios&lt;/strong&gt; - Its also a win for the developers and gaming studios, as they can offer in-game assets like characters, land or others - what is relevant for the particular game - in the form of NFTs and thus allowing them to raise money and build a audience before the actual launch of the game!&lt;/p&gt;

&lt;hr /&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/dalle_rareingameitem.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;A scarce to find asset! (AUTO)&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;The in-game assets that are offered in a Web3 Game, are basically, NFTs. With NFTs, the quantity of each type of the item is fixed and its origin and history can be tracked, this &lt;strong&gt;gives these assets a authenticity and scarcity!&lt;/strong&gt; That makes it actually valuable and thus some assets can be very hard and rare to get your hands-on!&lt;/p&gt;

&lt;h2 id=&quot;some-web3-games&quot;&gt;Some Web3 Games&lt;/h2&gt;

&lt;h3 id=&quot;cryptokitties&quot;&gt;CryptoKitties&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/3PTstAK-cH8/&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;!--&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/3PTstAK-cH8/&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen&gt;&lt;/iframe&gt;--&gt;

&lt;p&gt;&lt;strong&gt;Who&lt;/strong&gt;: Developed by Dapper Labs in 2017. It was one of the first-recorded web3 games in the space.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What&lt;/strong&gt;:  In the game, users collect, what are called, CryptoKitties, which are basically NFTs. Once they own a few kitties, they can breed between cryptokitties to generate new cryptokitties, which are also NFTs. And the breeding happens through the combination of the so-called “genes” of these cryptokitties.&lt;br /&gt;
With 1.5 million total users and $40 million worth of transactions on the platform in 2019, the game attracted 14,000 users daily — and made headlines when an in-game pet was sold for $300,000.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Where&lt;/strong&gt;: &lt;a href=&quot;https://www.cryptokitties.co/&quot;&gt;CryptoKitties Website&lt;/a&gt;. The open-marketplace to collect and trade cryptokitties is here at &lt;a href=&quot;https://opensea.io/collection/cryptokitties&quot;&gt;OpenSea - CryptoKitties&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;axie-infinity&quot;&gt;Axie Infinity&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/X2z_YIeettE/&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;!--&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/X2z_YIeettE/&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen&gt;&lt;/iframe&gt;--&gt;

&lt;p&gt;&lt;strong&gt;Who&lt;/strong&gt;: Sky Mavix in 2018 March. Another early game in the web3 world.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What&lt;/strong&gt;: With a similar model, where users buy their initial characters (in the form of NFTs) and then they perform battles, upgrade, buy lands, and farm resources. There’s also real-time battles where players can earn money.&lt;/p&gt;

&lt;p&gt;Hitting 2.7 million monthly active users in January 2022 (source - CoinDCX).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Where&lt;/strong&gt;: &lt;a href=&quot;https://axieinfinity.com/&quot;&gt;Axie Infinity&lt;/a&gt;. They have their own marketplace!&lt;/p&gt;

&lt;h3 id=&quot;the-sandbox&quot;&gt;The Sandbox&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/0Jquhzr4d4k/&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;!--&lt;iframe width=&quot;420&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/0Jquhzr4d4k/&quot; frameborder=&quot;0&quot; allow=&quot;autoplay; encrypted-media&quot; allowfullscreen&gt;&lt;/iframe&gt;--&gt;

&lt;p&gt;&lt;strong&gt;Who&lt;/strong&gt; - PIXOWL INC in 2012&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;What&lt;/strong&gt;: One of the first games to &lt;strong&gt;offer land on the metaverse&lt;/strong&gt;, in the form of NFTs. The goal of the game is to create experiences like Minecraft on the blockchain and thus essentially disrupt games like Minecraft. Its a platform where users can build, own and monetize their gaming experiences. You can create your own avatar for free to get started!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Where&lt;/strong&gt;:  &lt;a href=&quot;https://www.sandbox.game/en/&quot;&gt;The Sandbox&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Web3 gaming is inevitable. Gaming is a growing sector and &lt;strong&gt;giving gamers ownership&lt;/strong&gt; and thus ideally in one word, freedom, is definitely something that the gamers want and thus will happen.!&lt;/p&gt;

&lt;!-- _includes/image.html --&gt;
&lt;div class=&quot;image-wrapper center&quot;&gt;
    
        &lt;img src=&quot;/assets/images/dalle_aguywithjoy.png&quot; alt=&quot;&quot; /&gt;
    
    
        &lt;p class=&quot;image-caption&quot;&gt;A gamer having the fun! (AUTO)&lt;/p&gt;
    
&lt;/div&gt;

&lt;p&gt;Also, with web3 gaming, theres a &lt;strong&gt;community of the gamers who are continously active and giving feedback throughout the process of the development&lt;/strong&gt; of the game, and thus the desire is pretty prevalent, which allows the gaming studios / developers build it exactly for the demand. Also, the studios can raise money for in-game items before even the game is launched.&lt;/p&gt;

&lt;p&gt;So in short, yeah, it is &lt;strong&gt;in-evitable!&lt;/strong&gt; :)&lt;/p&gt;</content><author><name></name></author><category term="web3" /><category term="gaming" /><category term="games" /><category term="blockchain" /><category term="nft" /><category term="token" /><summary type="html">The global gaming market has been valued at $195 billion in 2021 (source). In 2021 alone people have spent $54B on in-game items (source). Thats quite a bit of in-game purchases. For those of you who are new to the modern gaming world, in-game purchases are items that can be bought to enhance certain things that are available in the game. Like weapons, outfits, spells, charms, coins and so on. Going forward lets call these assets.</summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="http://localhost:4000/assets/images/web3gaming_header.jpg" /><media:content medium="image" url="http://localhost:4000/assets/images/web3gaming_header.jpg" xmlns:media="http://search.yahoo.com/mrss/" /></entry></feed>